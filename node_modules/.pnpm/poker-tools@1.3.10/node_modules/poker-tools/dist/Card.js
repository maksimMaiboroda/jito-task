'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _Suit = require('./Suit');

var _Suit2 = _interopRequireDefault(_Suit);

var _Rank = require('./Rank');

var _Rank2 = _interopRequireDefault(_Rank);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Card = function () {
  function Card(rank, suit) {
    _classCallCheck(this, Card);

    this.rank = rank;
    this.suit = suit;
  }

  _createClass(Card, [{
    key: 'getRank',
    value: function getRank() {
      return this.rank;
    }
  }, {
    key: 'getSuit',
    value: function getSuit() {
      return this.suit;
    }
  }, {
    key: 'equals',
    value: function equals(c) {
      return this.getRank() === c.getRank() && this.getSuit() === c.getSuit();
    }
  }, {
    key: 'toString',
    value: function toString() {
      var suit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      var full = arguments[1];
      var plural = arguments[2];

      if (full) {
        if (plural) {
          return _Rank2.default.names[this.rank].plural;
        }
        return _Rank2.default.names[this.rank].singular;
      }
      var s = '' + this.rank;
      if (this.rank === 10) {
        s = 'T';
      } else if (this.rank === 11) {
        s = 'J';
      } else if (this.rank === 12) {
        s = 'Q';
      } else if (this.rank === 13) {
        s = 'K';
      } else if (this.rank === 14) {
        s = 'A';
      }
      if (suit) {
        if (this.suit === _Suit2.default.CLUB) {
          s += 'c';
        } else if (this.suit === _Suit2.default.DIAMOND) {
          s += 'd';
        } else if (this.suit === _Suit2.default.HEART) {
          s += 'h';
        } else if (this.suit === _Suit2.default.SPADE) {
          s += 's';
        }
      }
      return s;
    }
  }], [{
    key: 'fromString',
    value: function fromString(s) {
      var tmp = s.replace(/[^a-z0-9]/gi, '');
      if (tmp.length !== 2) {
        throw new Error('Invalid card: ' + tmp);
      }
      return new Card(_Rank2.default.fromString(tmp[0].toLowerCase()), _Suit2.default.fromString(tmp[1].toLowerCase()));
    }
  }]);

  return Card;
}();

exports.default = Card;